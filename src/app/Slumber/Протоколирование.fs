namespace Дрема

open System
open System.Diagnostics
open Printf

/// Фцнкции и типы используемые для протоколирования информации
[<AutoOpen>]
module Протоколирование = 

    /// Объединение описывающее запись журнала
    type ЗаписьЖурнала = 
        | Отладка of String
        | Предупреждение of String
        | Информация of String
        | Ошибка of (String * Exception option)

    ///Writes to the log output. Defaults to debug.
    let mutable private _записать = 
        fun запись -> 

            let сообщение, уровень = 
                match запись with
                | Отладка сообщ -> сообщ, "Debug"
                | Предупреждение сообщ -> сообщ, "Warn"
                | Информация сообщ -> сообщ, "Info"
                | Ошибка (сообщ, Some искл) -> String.Format ("{0} : {1}", сообщ, искл.Message), "Error"
                | Ошибка (сообщ, _) -> сообщ, "Error"

            let текст = 
                sprintf "%d %s %s %s" 
                <| (getThreadId ()) 
                <| (DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss")) 
                <| уровень 
                <| сообщение

            Trace.WriteLine текст

    /// Устанавливает писателя используемого для записи журнальных строк
    let установитьПисательЖурнала писатель = 
        _записать <- писатель

    /// Записывает журнальную строку
    let private журнал строитель формат =
        kprintf (строитель >> _записать) формат

    /// Записывает отладочную строку в журнал
    let журналОтладка формат = 
        журнал (fun сообщ -> Отладка (сообщ)) формат

    /// Записывает предупреждающую строку в журнал
    let журналПредупр формат = 
        журнал (fun сообщ -> Предупреждение (сообщ)) формат

    /// Записывает информационную строку в журнал
    let журналИнфо формат= 
        журнал (fun сообщ -> Информация (сообщ)) формат

    /// Записывает строку ошибки в журнал
    let журналОшибка формат = 
        журнал (fun сообщ -> Ошибка (сообщ, None)) формат

    /// Записывает строку исключения в журнал
    let журналИсключение искл формат = 
        журнал (fun сообщ -> Ошибка (сообщ, Some искл)) формат



